// const sequelize = require('../config/db');
// const User = require('../models/user');
// const Department = require('../models/department');
// const Event = require('../models/event'); // –î–æ–±–∞–≤–ª—è–µ–º Event
// const bcrypt = require('bcryptjs');

// (async () => {
//   try {
//     // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü: User, Department, Event
//     await sequelize.sync({ force: true });
//     console.log('–ë–∞–∑–∞ –æ—á–∏—â–µ–Ω–∞ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞');

//     // –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
//     const dep1 = await Department.create({
//       name: '–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –≤–Ω–µ—à–Ω–µ–π —Ä–∞–∑–≤–µ–¥–∫–∏',
//       description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–±–æ—Ä–µ –∏ –∞–Ω–∞–ª–∏–∑–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞ —Ä—É–±–µ–∂–æ–º, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞.'
//     });

//     const dep2 = await Department.create({
//       name: '–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∫–æ–Ω—Ç—Ä—Ä–∞–∑–≤–µ–¥–∫–∏',
//       description: '–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—ã—è–≤–ª–µ–Ω–∏–µ, –ø—Ä–µ—Å–µ—á–µ–Ω–∏–µ –∏ –Ω–µ–π—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Ä–∞–∑–≤–µ–¥–æ–∫ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–ö.'
//     });

//     const dep3 = await Department.create({
//       name: '–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
//       description: '–ó–∞—â–∏—â–∞–µ—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑.'
//     });

//     // –ê–¥–º–∏–Ω—ã (—Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞—ë–º –∞–¥–º–∏–Ω–æ–≤ —á—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å –∏—Ö –∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º)
//     const admin1 = await User.create({
//       username: 'batyr',
//       password: await bcrypt.hash('1234', 10),
//       iin: '111111111111',
//       full_name: '–ë–∞—Ç—ã—Ä –ê—à–∏–º',
//       rank: '–ü–æ–ª–∫–æ–≤–Ω–∏–∫',
//       position: '–ù–∞—á–∞–ª—å–Ω–∏–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞',
//       role: 'admin',
//       departmentId: dep1.id
//     });

//     const admin2 = await User.create({
//       username: 'nurik',
//       password: await bcrypt.hash('1234', 10),
//       iin: '222222222221',
//       full_name: '–ù—É—Ä—Ö–∞—Ç –°–µ—Ä–≥–∞–∑–∏–µ–≤',
//       rank: '–ü–æ–ª–∫–æ–≤–Ω–∏–∫',
//       position: '–ù–∞—á–∞–ª—å–Ω–∏–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞',
//       role: 'admin',
//       departmentId: dep2.id
//     });

//     const admin3 = await User.create({
//       username: 'dias',
//       password: await bcrypt.hash('1234', 10),
//       iin: '333333333331',
//       full_name: '–ò–º–∞–∫–∞–Ω–æ–≤ –î–∏–∞—Å',
//       rank: '–ü–æ–ª–∫–æ–≤–Ω–∏–∫',
//       position: '–ù–∞—á–∞–ª—å–Ω–∏–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞',
//       role: 'admin',
//       departmentId: dep3.id
//     });

//     // –ü—Ä–∏–≤—è–∑–∫–∞ –∞–¥–º–∏–Ω–æ–≤ –∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º
//     dep1.adminId = admin1.id;
//     await dep1.save();

//     dep2.adminId = admin2.id;
//     await dep2.save();

//     dep3.adminId = admin3.id;
//     await dep3.save();

//     // –û–±—ã—á–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ (–∫–∞–ø–∏—Ç–∞–Ω—ã –∏ –º–∞–π–æ—Ä—ã)
//     const usersData = [
//       {
//         username: 'rodi',
//         password: await bcrypt.hash('1234', 10),
//         iin: '111111111112',
//         full_name: '–†–æ–¥–∏–æ–Ω',
//         rank: '–ú–∞–π–æ—Ä',
//         position: 'Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
//         role: 'hr',
//         departmentId: dep1.id
//       },
//       {
//         username: 'tair',
//         password: await bcrypt.hash('1234', 10),
//         iin: '111111111113',
//         full_name: '–¢–∞–∏—Ä–ª–∞–Ω',
//         rank: '–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç',
//         position: 'Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
//         role: 'employee',
//         departmentId: dep1.id
//       },
//       {
//         username: 'aldik',
//         password: await bcrypt.hash('1234', 10),
//         iin: '222222222222',
//         full_name: '–ê–ª–¥–∏—è—Ä',
//         rank: '–ú–∞–π–æ—Ä',
//         position: 'DevOps –∏–Ω–∂–µ–Ω–µ—Ä',
//         role: 'hr',
//         departmentId: dep2.id
//       },
//       {
//         username: 'sultiok',
//         password: await bcrypt.hash('1234', 10),
//         iin: '222222222223',
//         full_name: '–°—É–ª—Ç–∞–Ω–∏—è—Ä',
//         rank: '–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç',
//         position: 'Fullstack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
//         role: 'employee',
//         departmentId: dep2.id
//       },
//       {
//         username: 'sula',
//         password: await bcrypt.hash('1234', 10),
//         iin: '333333333332',
//         full_name: '–°—É–ª—Ç–∞–Ω',
//         rank: '–ú–∞–π–æ—Ä',
//         position: 'Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
//         role: 'hr',
//         departmentId: dep3.id
//       },
//       {
//         username: 'ernar',
//         password: await bcrypt.hash('1234', 10),
//         iin: '333333333333',
//         full_name: '–ï—Ä–Ω–∞—Ä',
//         rank: '–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç',
//         position: 'Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
//         role: 'employee',
//         departmentId: dep3.id
//       }
//     ];

//     await User.bulkCreate(usersData);

//     console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –æ—á–∏—â–µ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã');
//     process.exit(0);

//   } catch (error) {
//     console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö', error);
//     process.exit(1);
//   }
// })();

const { Sequelize, DataTypes } = require('sequelize');
const sequelize = require('../config/db');
const Event = require('../models/event');

(async () => {
  try {
    const queryInterface = sequelize.getQueryInterface();

    // 1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è startTime, endTime, departmentId, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    const tableDescription = await queryInterface.describeTable('Events');

    if (!tableDescription.startTime) {
      await queryInterface.addColumn('Events', 'startTime', {
        type: DataTypes.DATE,
        allowNull: true,
      });
      console.log('–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ startTime');
    }

    if (!tableDescription.endTime) {
      await queryInterface.addColumn('Events', 'endTime', {
        type: DataTypes.DATE,
        allowNull: true,
      });
      console.log('–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ endTime');
    }

    if (!tableDescription.departmentId) {
      await queryInterface.addColumn('Events', 'departmentId', {
        type: DataTypes.INTEGER,
        allowNull: true,
      });
      console.log('–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ departmentId');
    }

    // 2. –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ start ‚Üí startTime
    const events = await Event.findAll();
    for (const event of events) {
      if (event.start) {
        event.startTime = event.start;
        await event.save();
        console.log(`–ü–µ—Ä–µ–Ω–æ—Å start –¥–ª—è —Å–æ–±—ã—Ç–∏—è ID ${event.id}`);
      }
    }

    // 3. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ start
    if (tableDescription.start) {
      await queryInterface.removeColumn('Events', 'start');
      console.log('–£–¥–∞–ª–µ–Ω–æ –ø–æ–ª–µ start');
    }

    console.log('–ú–∏–≥—Ä–∞—Ü–∏—è Events –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ üéâ');
    process.exit(0);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ Events:', error);
    process.exit(1);
  }
})();
